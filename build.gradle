plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = 'https://maven.terraformersmc.com/'}
	maven { url = "https://libraries.minecraft.net" }
	maven { url = "https://maven.quiltmc.org/repository/release/" }
	mavenCentral()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	
  	modImplementation "com.ptsmods:devlogin:3.5" // Developpement deps : let me use my account

	// not required, but we want to see our config screen
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// the main quilt config API. replace <version> with the latest version
	include(implementation("org.quiltmc:quilt-config:${project.quilt_config}"))

	// optional: a serializer to use when saving and reading the config
	// you can omit this and implement your own serializer
	// replace <serializer> with either "json5" or "toml" and <version> with the latest version
	include(implementation("org.quiltmc.quilt-config.serializers:toml:${project.quilt_config}"))


	include "com.electronwill.night-config:core:${project.night_config}"
	include "com.electronwill.night-config:toml:${project.night_config}"
}

loom {
	accessWidenerPath = file "src/main/resources/emotes.accesswidener"

	runs {
		server {
			runDir = "run/server"
		}

		client {
			runDir = "run"
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
